plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "ceo.dog.dogapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "ceo.dog.dogapp.CustomTestRunner"
        buildConfigField "String", "BASE_API_URL", "\"https://dog.ceo/api/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }

    kapt {
        generateStubs = true
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.3'
    testImplementation 'junit:junit:4.+'
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    debugImplementation "androidx.fragment:fragment-testing:1.3.0"

    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
    androidTestImplementation 'org.mockito:mockito-android:2.12.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'

    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.moshi:moshi-kotlin:1.9.3"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.collection:collection-ktx:1.1.0"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$archLifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archLifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$archLifecycle"
    implementation "androidx.fragment:fragment-ktx:1.3.0"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$dagger"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.github.bumptech.glide:glide:$glide"
}